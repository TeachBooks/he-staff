# --- Nginx Configuration for HE Staff Backend with SAML ---

upstream backend {
    server backend:8000;
}

# --- HTTP Server Block (Port 80) ---
server {
    listen 80;
    server_name he.citg.tudelft.nl;

    # --- Specific Location Blocks (High Priority First) ---
    # Immediate login on root -> go back to index.html after SSO
    location = / {
        return 302 /api/auth/require?redirect_to=/index.html;
    }

    # --- Redirects for known paths without trailing slash ---
    location = /admin { return 301 /admin/; }
    location = /draft { return 301 /draft/; }
    location = /branches { return 301 /branches/; }

    # Internal auth subrequest for admin protection (returns 204 if authenticated, 401 otherwise)
    location = /_auth {
        internal;
        proxy_pass http://backend/api/auth/check;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
    }

    # Redirect unauthenticated clients to SSO login (land on /index.html after SSO)
    location @sso_redirect {
        return 302 /api/auth/require?redirect_to=/index.html;
    }

    # --- Locations WITH trailing slash (High Priority) ---
    # Protected admin area - allow only authenticated users
    location ^~ /admin/ {
        auth_request /_auth;
        # Redirect to SSO for any unauthenticated status
        error_page 401 403 404 = @sso_redirect;

        alias /usr/share/nginx/html/admin/;
        index index.html;
        try_files $uri $uri/ =404;
    }

    location ^~ /draft/ { # High priority for draft
        alias /usr/share/nginx/html/draft/;
        index index.html;
        try_files $uri $uri/ =404;
    }

    location ^~ /branches/ { # High priority for branches index
        alias /usr/share/nginx/html/branches/;
        index index.html;
        try_files $uri $uri/ =404;
    }

    # --- Specific Main Book Assets (High Priority) ---
    # Main page assets
    location ^~ /_static/ {
        root /usr/share/nginx/html/main_book_root;
        try_files $uri $uri/ =404;
    }
    location ^~ /_images/ {
        root /usr/share/nginx/html/main_book_root;
        try_files $uri $uri/ =404;
    }
    location ^~ /_downloads/ {
        root /usr/share/nginx/html/main_book_root;
        try_files $uri $uri/ =404;
    }

    # Draft page assets
    location ^~ /draft/_static/ {
        alias /usr/share/nginx/html/draft/_static/;
        try_files $uri $uri/ =404;
    }
    location ^~ /draft/_images/ {
        alias /usr/share/nginx/html/draft/_images/;
        try_files $uri $uri/ =404;
    }
    location ^~ /draft/_downloads/ {
        alias /usr/share/nginx/html/draft/_downloads/;
        try_files $uri $uri/ =404;
    }

    # Dynamic branch assets
    location ~ ^/([^/]+)/_static/ {
        alias /usr/share/nginx/html/$1/_static/;
        try_files $uri $uri/ =404;
    }
    location ~ ^/([^/]+)/_images/ {
        alias /usr/share/nginx/html/$1/_images/;
        try_files $uri $uri/ =404;
    }
    location ~ ^/([^/]+)/_downloads/ {
        alias /usr/share/nginx/html/$1/_downloads/;
        try_files $uri $uri/ =404;
    }

    # --- API Location (Backend handles SAML authentication) ---
    # Use ^~ to prevent regex locations from capturing /api paths
    location ^~ /api {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
    }

    # --- Dynamic Branch Location (FIXED FOR BRANCH STRUCTURE) ---
    # This handles requests like /HR/HR.html, /test-branch/something.html, etc.
    location ~ ^/([^/]+)(/.*)?$ {
        set $branch_name $1;

        # Skip known system paths and special directories
        if ($branch_name ~ ^(api|favicon\.ico|robots\.txt|_static|_images|_downloads)$) {
            break;
        }

        # Check if it's a valid branch directory
        root /usr/share/nginx/html;

        # Try branch first, then main_book_root as fallback
        try_files $uri @try_main_book;
    }

    # Fallback to main_book_root
    location @try_main_book {
        root /usr/share/nginx/html/main_book_root;
        try_files $uri $uri/ =404;
    }

    # --- General Root Location (Final Fallback) ---
    location / {
        root /usr/share/nginx/html/main_book_root;
        try_files $uri $uri/ =404;
    }
}

# --- HTTPS Server Block (Port 443) ---
server {
    listen 443 ssl;
    http2 on;
    server_name he.citg.tudelft.nl;

    # --- SSL Configuration ---
    ssl_certificate /var/web_server/htdocs/he/config/certs/he.citg.tudelft.nl.pem;
    ssl_certificate_key /var/web_server/htdocs/he/config/certs/he.citg.tudelft.nl.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # --- Location Blocks (Mirror the HTTP block with same logic) ---

    # Immediate login on root (HTTPS) -> go back to index.html after SSO
    location = / {
        return 302 /api/auth/require?redirect_to=/index.html;
    }

    # --- Redirects ---
    location = /admin { return 301 /admin/; }
    location = /draft { return 301 /draft/; }
    location = /branches { return 301 /branches/; }

    # Internal auth subrequest for admin protection (returns 204 if authenticated, 401 otherwise)
    location = /_auth {
        internal;
        proxy_pass http://backend/api/auth/check;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
    }

    # Redirect unauthenticated clients to SSO login (land on /index.html after SSO)
    location @sso_redirect {
        return 302 /api/auth/require?redirect_to=/index.html;
    }

    # --- Locations WITH trailing slash ---
    # Protected admin area - allow only authenticated users
    location ^~ /admin/ {
        auth_request /_auth;
        error_page 401 403 404 = @sso_redirect;

        alias /usr/share/nginx/html/admin/;
        index index.html;
        try_files $uri $uri/ =404;
    }

    location ^~ /draft/ { # High priority
        alias /usr/share/nginx/html/draft/;
        index index.html;
        try_files $uri $uri/ =404;
    }

    location ^~ /branches/ { # High priority
        alias /usr/share/nginx/html/branches/;
        index index.html;
        try_files $uri $uri/ =404;
    }

    # --- Specific Main Book Assets ---
    location ^~ /_static/ {
        root /usr/share/nginx/html/main_book_root;
        try_files $uri $uri/ =404;
    }
    location ^~ /_images/ {
        root /usr/share/nginx/html/main_book_root;
        try_files $uri $uri/ =404;
    }
    location ^~ /_downloads/ {
        root /usr/share/nginx/html/main_book_root;
        try_files $uri $uri/ =404;
    }

    # Draft page assets
    location ^~ /draft/_static/ {
        alias /usr/share/nginx/html/draft/_static/;
        try_files $uri $uri/ =404;
    }
    location ^~ /draft/_images/ {
        alias /usr/share/nginx/html/draft/_images/;
        try_files $uri $uri/ =404;
    }
    location ^~ /draft/_downloads/ {
        alias /usr/share/nginx/html/draft/_downloads/;
        try_files $uri $uri/ =404;
    }

    # Dynamic branch assets
    location ~ ^/([^/]+)/_static/ {
        alias /usr/share/nginx/html/$1/_static/;
        try_files $uri $uri/ =404;
    }
    location ~ ^/([^/]+)/_images/ {
        alias /usr/share/nginx/html/$1/_images/;
        try_files $uri $uri/ =404;
    }
    location ~ ^/([^/]+)/_downloads/ {
        alias /usr/share/nginx/html/$1/_downloads/;
        try_files $uri $uri/ =404;
    }

    # --- API (Backend handles SAML authentication directly) ---
    # Use ^~ to prevent regex locations from capturing /api paths
    location ^~ /api {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
    }

    # --- Dynamic Branch Location (FIXED FOR BRANCH STRUCTURE) ---
    location ~ ^/([^/]+)(/.*)?$ {
        set $branch_name $1;

        # Skip known system paths and special directories
        if ($branch_name ~ ^(api|favicon\.ico|robots\.txt|consume|_static|_images|_downloads)$) {
            break;
        }

        # Check if it's a valid branch directory
        root /usr/share/nginx/html;

        # Try branch first, then main_book_root as fallback
        try_files $uri @try_main_book_https;
    }

    # Fallback to main_book_root for HTTPS
    location @try_main_book_https {
        root /usr/share/nginx/html/main_book_root;
        try_files $uri $uri/ =404;
    }

    # --- General Root Fallback ---
    location / { # Fallback for main book files
        root /usr/share/nginx/html/main_book_root;
        try_files $uri $uri/ =404;
    }

    location = /consume {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # --- Security Headers ---
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
}