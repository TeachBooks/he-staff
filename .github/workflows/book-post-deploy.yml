name: Book Post-Deployment

on:
  workflow_run:
    workflows: ["call-deploy-book"]
    types:
      - completed

jobs:
  copy-to-server:
    runs-on: self-hosted
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
          fetch-depth: 1
      
      - name: Get branch name
        id: get-branch
        run: |
          BRANCH="${GITHUB_REF##*/}"
          if [ -z "$BRANCH" ]; then
            BRANCH="${{ github.event.workflow_run.head_branch }}"
          fi
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          echo "Branch identified as: $BRANCH"
      
      - name: Download artifact
        id: download
        continue-on-error: true
        run: |
          # Try to download the artifact using GitHub CLI
          WORKFLOW_ID="${{ github.event.workflow_run.id }}"
          echo "Trying to download from workflow ID: $WORKFLOW_ID"
          
          mkdir -p /tmp/artifact-download
          # This might fail, but that's OK, we'll fall back to direct deployment
          gh run download $WORKFLOW_ID --dir /tmp/artifact-download || true
          
          if [ -d "/tmp/artifact-download" ] && [ "$(ls -A /tmp/artifact-download)" ]; then
            echo "artifacts_found=true" >> $GITHUB_OUTPUT
            echo "Downloaded artifacts:"
            ls -la /tmp/artifact-download
          else
            echo "artifacts_found=false" >> $GITHUB_OUTPUT
            echo "No artifacts found or download failed"
          fi
      
      - name: Deploy book using script
        run: |
          BRANCH="${{ steps.get-branch.outputs.branch }}"
          
          # Run our enhanced deployment script
          /var/web_server/deploy-book.sh "$BRANCH"