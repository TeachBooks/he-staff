name: Deploy to HE Server

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/deploy-to-he-server.yml'
  workflow_dispatch:
    inputs:
      backend_image:
        description: 'Custom backend image to deploy (leave empty to build from source)'
        required: false
        default: ''
      frontend_version:
        description: 'Custom frontend version (leave empty to use latest)'
        required: false
        default: ''

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}  # Use the PAT instead of GITHUB_TOKEN

      - name: Build and push backend image
        if: ${{ github.event.inputs.backend_image == '' }}
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ghcr.io/teachbooks/he-backend:${{ github.sha }},ghcr.io/teachbooks/he-backend:latest

      - name: Trigger deployment on self-hosted runner
        uses: actions/github-script@v6
        with:
          script: |
            const backendImage = '${{ github.event.inputs.backend_image }}' || `ghcr.io/teachbooks/he-backend:${{ github.sha }}`;
            const frontendVersion = '${{ github.event.inputs.frontend_version }}' || '${{ github.sha }}';
            
            await github.rest.actions.createWorkflowDispatch({
              owner: 'TeachBooks',
              repo: 'he-staff',
              workflow_id: 'deploy-he-server.yml',
              ref: 'main',
              inputs: {
                backend_image: backendImage,
                frontend_version: frontendVersion
              }
            });
            
            console.log(`Deployment job triggered with backend: ${backendImage} and frontend: ${frontendVersion}`);